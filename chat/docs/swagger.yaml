basePath: /chat
definitions:
  model.FavoriteCreateReq:
    properties:
      response:
        additionalProperties: {}
        type: object
    type: object
  model.FavoriteDto:
    properties:
      created_at:
        type: string
      id:
        type: integer
      response:
        additionalProperties: {}
        type: object
      updated_at:
        type: string
    type: object
  model.FavoriteUpdateReq:
    properties:
      id:
        type: integer
      response:
        additionalProperties: {}
        type: object
    type: object
  model.FindOneResp:
    properties:
      content:
        items:
          $ref: '#/definitions/model.SessionContentDto'
        type: array
      editable:
        type: boolean
      id:
        type: string
      tg:
        type: boolean
      title:
        type: string
    type: object
  model.ListResp:
    properties:
      sessions:
        items:
          $ref: '#/definitions/model.SessionDto'
        type: array
    type: object
  model.LoginReq:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  model.LoginResp:
    properties:
      roles:
        items:
          type: string
        type: array
      token:
        type: string
    type: object
  model.NewSessionResp:
    properties:
      id:
        type: string
    type: object
  model.NotificationUpdateReq:
    properties:
      active:
        type: boolean
      organization_id:
        minimum: 1
        type: integer
    required:
    - active
    - organization_id
    type: object
  model.QueryDto:
    properties:
      created_at:
        type: string
      id:
        type: integer
      period:
        type: string
      product:
        type: string
      prompt:
        type: string
      status:
        type: string
      type:
        type: string
    type: object
  model.RenameReq:
    properties:
      id:
        type: string
      title:
        type: string
    required:
    - id
    - title
    type: object
  model.ResponseDto:
    properties:
      body:
        type: string
      created_at:
        type: string
      data:
        additionalProperties: {}
        type: object
      data_type:
        type: string
      status:
        type: string
    type: object
  model.SessionContentDto:
    properties:
      query:
        $ref: '#/definitions/model.QueryDto'
      response:
        $ref: '#/definitions/model.ResponseDto'
    type: object
  model.SessionDto:
    properties:
      created_at:
        type: string
      id:
        type: string
      tg:
        type: boolean
      tg_id:
        type: integer
      title:
        type: string
    type: object
  model.UniqueCodeDto:
    properties:
      name:
        type: string
      regular:
        type: boolean
      segment:
        type: string
    type: object
  model.UniqueCodesResp:
    properties:
      codes:
        items:
          $ref: '#/definitions/model.UniqueCodeDto'
        type: array
    type: object
host: api.misis.larek.tech
info:
  contact: {}
  description: Документация API чат-сервиса команды misis.tech
  license:
    name: BSD-3-Clause
    url: https://opensource.org/license/bsd-3-clause
  title: Chat service API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Авторизоваться в системе, используя логин и пароль
      parameters:
      - description: Запрос на авторизацию
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: Успешная авторизация
          schema:
            $ref: '#/definitions/model.LoginResp'
        "400":
          description: Неверный запрос
          schema:
            type: string
        "401":
          description: Неверный данные для входа
          schema:
            type: string
        "422":
          description: Ошибка валидации данных
          schema:
            type: string
      summary: Авторизация
      tags:
      - auth
  /favorite:
    post:
      consumes:
      - application/json
      description: Добавляет новый предикт в избранное.
      parameters:
      - description: Параметры запроса
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.FavoriteCreateReq'
      produces:
      - application/json
      responses:
        "201":
          description: Предикт успешно добавлен в избранное
          schema:
            type: string
        "400":
          description: Некорректный запрос
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Добавляет новый предикт в избранное.
      tags:
      - favorite
    put:
      consumes:
      - application/json
      description: Обновляет избранный предикт.
      parameters:
      - description: Параметры запроса
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.FavoriteUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: Предикт успешно обновлен
          schema:
            type: string
        "400":
          description: Некорректный запрос
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Обновляет избранный предикт.
      tags:
      - favorite
  /favorite/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет избранный предикт по ID.
      parameters:
      - description: ID предикта
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Предикт успешно удален
          schema:
            type: string
        "400":
          description: Некорректный запрос
          schema:
            type: string
        "404":
          description: Предикт не найден
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Удаляет избранный предикт по ID.
      tags:
      - favorite
    get:
      consumes:
      - application/json
      description: Возвращает избранный предикт по ID.
      parameters:
      - description: ID предикта
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Избранный предикт
          schema:
            $ref: '#/definitions/model.FavoriteDto'
        "400":
          description: Некорректный запрос
          schema:
            type: string
        "404":
          description: Предикт не найден
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Возвращает избранный предикт по ID.
      tags:
      - favorite
  /favorite/list:
    get:
      consumes:
      - application/json
      description: Возвращает список избранных предиктов.
      produces:
      - application/json
      responses:
        "200":
          description: Список избранных предиктов
          schema:
            items:
              $ref: '#/definitions/model.FavoriteDto'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Возвращает список избранных предиктов.
      tags:
      - favorite
  /notification/switch:
    post:
      consumes:
      - application/json
      description: Включает или выключает уведомления.
      parameters:
      - description: Параметры запроса
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.NotificationUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: Статус уведомлений изменен
          schema:
            type: string
        "400":
          description: Некорректный запрос
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Включает или выключает уведомления.
      tags:
      - notification
  /session/{id}:
    delete:
      consumes:
      - application/json
      description: Удалить сессию по ID
      parameters:
      - description: UUID сессии
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Сессия удалена
          schema:
            type: string
        "400":
          description: Неверное значение ID
          schema:
            type: string
        "404":
          description: Сессия с таким ID не найдена
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Удалить сессию
      tags:
      - session
    get:
      consumes:
      - application/json
      description: Получить все запросы и ответы для сессии по ID
      parameters:
      - description: UUID сессии
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Информация о сессии
          schema:
            $ref: '#/definitions/model.FindOneResp'
        "400":
          description: Неверное значение ID
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Получить данные о сессии
      tags:
      - session
  /session/list:
    get:
      consumes:
      - application/json
      description: Получить список сессий в порядке убывания момента создания от последней
        к первой для авторизованного пользователя
      produces:
      - application/json
      responses:
        "200":
          description: Список сессий
          schema:
            $ref: '#/definitions/model.ListResp'
      security:
      - ApiKeyAuth: []
      summary: Список сессий
      tags:
      - session
  /session/new:
    post:
      consumes:
      - application/json
      description: Создать новую сессию в чате для авторизованного пользователя
      produces:
      - application/json
      responses:
        "201":
          description: ID новой сессии
          schema:
            $ref: '#/definitions/model.NewSessionResp'
        "400":
          description: Сессия с таким ID уже существует
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Новая сессия
      tags:
      - session
  /session/rename:
    put:
      consumes:
      - application/json
      description: Обновить заголовок сессии, который отображается в интерфейсе
      parameters:
      - description: ID и новое название сессии
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.RenameReq'
      produces:
      - application/json
      responses:
        "204":
          description: Сессия переименована
          schema:
            type: string
        "400":
          description: Сессия с таким ID уже существует
          schema:
            type: string
        "404":
          description: Сессия с таким ID не найдена
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Обновить заголовок
      tags:
      - session
  /stock/unique_codes/{organization_id}:
    get:
      consumes:
      - application/json
      description: Получить набор уникальных записей с разделением на регулярные и
        нерегулярные товары
      parameters:
      - description: ID организации
        in: path
        name: organization_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список с товарами
          schema:
            $ref: '#/definitions/model.UniqueCodesResp'
      security:
      - ApiKeyAuth: []
      summary: Регулярные товары
      tags:
      - stock
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
