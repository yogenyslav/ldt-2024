// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "BSD-3-Clause",
            "url": "https://opensource.org/license/bsd-3-clause"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Авторизоваться в системе, используя логин и пароль",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Авторизация",
                "parameters": [
                    {
                        "description": "Запрос на авторизацию",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная авторизация",
                        "schema": {
                            "$ref": "#/definitions/model.LoginResp"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Неверный данные для входа",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации данных",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/session/list": {
            "get": {
                "description": "Получить список сессий в порядке убывания момента создания от последней к первой для авторизованного пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "session"
                ],
                "summary": "Список сессий",
                "parameters": [
                    {
                        "type": "string",
                        "description": "access token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список сессий",
                        "schema": {
                            "$ref": "#/definitions/model.ListResp"
                        }
                    }
                }
            }
        },
        "/session/new": {
            "post": {
                "description": "Создать новую сессию в чате для авторизованного пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "session"
                ],
                "summary": "Новая сессия",
                "parameters": [
                    {
                        "type": "string",
                        "description": "access token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID новой сессии",
                        "schema": {
                            "$ref": "#/definitions/model.NewSessionResp"
                        }
                    },
                    "400": {
                        "description": "Сессия с таким ID уже существует",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/session/rename": {
            "put": {
                "description": "Обновить заголовок сессии, который отображается в интерфейсе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "session"
                ],
                "summary": "Обновить заголовок",
                "parameters": [
                    {
                        "type": "string",
                        "description": "access token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "ID и новое название сессии",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RenameReq"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Сессия переименована",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Сессия с таким ID уже существует",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Сессия с таким ID не найдена",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/session/{id}": {
            "get": {
                "description": "Получить все запросы и ответы для сессии по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "session"
                ],
                "summary": "Получить данные о сессии",
                "parameters": [
                    {
                        "type": "string",
                        "description": "access token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о сессии",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверное значение ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удалить сессию по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "session"
                ],
                "summary": "Удалить сессию",
                "parameters": [
                    {
                        "type": "string",
                        "description": "access token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Сессия удалена",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверное значение ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Сессия с таким ID не найдена",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.ListResp": {
            "type": "object",
            "properties": {
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SessionDto"
                    }
                }
            }
        },
        "model.LoginReq": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.LoginResp": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "model.NewSessionResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "model.RenameReq": {
            "type": "object",
            "required": [
                "id",
                "title"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "maxLength": 25,
                    "minLength": 3
                }
            }
        },
        "model.SessionDto": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:10000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Chat service API",
	Description:      "Документация API чат-сервиса команды misis.tech",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
