// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: api/stock.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListProductsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products []*Product `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *ListProductsResp) Reset() {
	*x = ListProductsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stock_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProductsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProductsResp) ProtoMessage() {}

func (x *ListProductsResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_stock_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProductsResp.ProtoReflect.Descriptor instead.
func (*ListProductsResp) Descriptor() ([]byte, []int) {
	return file_api_stock_proto_rawDescGZIP(), []int{0}
}

func (x *ListProductsResp) GetProducts() []*Product {
	if x != nil {
		return x.Products
	}
	return nil
}

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameSpgz       string `protobuf:"bytes,1,opt,name=name_spgz,json=nameSpgz,proto3" json:"name_spgz,omitempty"`
	FinalNameKpgz  string `protobuf:"bytes,2,opt,name=final_name_kpgz,json=finalNameKpgz,proto3" json:"final_name_kpgz,omitempty"`
	FinalCodeKpgz  string `protobuf:"bytes,3,opt,name=final_code_kpgz,json=finalCodeKpgz,proto3" json:"final_code_kpgz,omitempty"`
	Depth3CodeKpgz string `protobuf:"bytes,4,opt,name=depth3_code_kpgz,json=depth3CodeKpgz,proto3" json:"depth3_code_kpgz,omitempty"`
	Id             int64  `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stock_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_api_stock_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_api_stock_proto_rawDescGZIP(), []int{1}
}

func (x *Product) GetNameSpgz() string {
	if x != nil {
		return x.NameSpgz
	}
	return ""
}

func (x *Product) GetFinalNameKpgz() string {
	if x != nil {
		return x.FinalNameKpgz
	}
	return ""
}

func (x *Product) GetFinalCodeKpgz() string {
	if x != nil {
		return x.FinalCodeKpgz
	}
	return ""
}

func (x *Product) GetDepth3CodeKpgz() string {
	if x != nil {
		return x.Depth3CodeKpgz
	}
	return ""
}

func (x *Product) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_api_stock_proto protoreflect.FileDescriptor

var file_api_stock_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x90, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x3a, 0x52, 0x92, 0x41, 0x4f, 0x0a, 0x4d, 0x2a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x20, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0x28, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x20,
	0x66, 0x6f, 0x72, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0xd2, 0x01, 0x08, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x22, 0xa9, 0x02, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x70, 0x67, 0x7a, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x67, 0x7a, 0x12, 0x26, 0x0a,
	0x0f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6b, 0x70, 0x67, 0x7a,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x4b, 0x70, 0x67, 0x7a, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x70, 0x67, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x4b, 0x70, 0x67, 0x7a, 0x12, 0x28, 0x0a,
	0x10, 0x64, 0x65, 0x70, 0x74, 0x68, 0x33, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x70, 0x67,
	0x7a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x74, 0x68, 0x33, 0x43,
	0x6f, 0x64, 0x65, 0x4b, 0x70, 0x67, 0x7a, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x3a, 0x77, 0x92, 0x41, 0x74, 0x0a, 0x72, 0x2a, 0x07,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x32, 0x1f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x20, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x69, 0x6e, 0x67, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x20, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0xd2, 0x01, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x73, 0x70, 0x67, 0x7a, 0xd2, 0x01, 0x0f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x6b, 0x70, 0x67, 0x7a, 0xd2, 0x01, 0x0f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x70, 0x67, 0x7a, 0xd2, 0x01, 0x10, 0x64, 0x65, 0x70, 0x74, 0x68,
	0x33, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x70, 0x67, 0x7a, 0xd2, 0x01, 0x02, 0x69, 0x64,
	0x32, 0x83, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x7a, 0x0a, 0x0c, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x3b, 0x92, 0x41, 0x15, 0x62, 0x13,
	0x0a, 0x11, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42, 0xf2, 0x01, 0x92, 0x41, 0xdd, 0x01, 0x12, 0xb2, 0x01,
	0x0a, 0x0c, 0x41, 0x50, 0x49, 0x20, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x65, 0x72, 0x12, 0x48,
	0xd0, 0x94, 0xd0, 0xbe, 0xd0, 0xba, 0xd1, 0x83, 0xd0, 0xbc, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x82,
	0xd0, 0xb0, 0xd1, 0x86, 0xd0, 0xb8, 0xd1, 0x8f, 0x20, 0xd0, 0xba, 0x20, 0x41, 0x50, 0x49, 0x2d,
	0xd1, 0x81, 0xd0, 0xb5, 0xd1, 0x80, 0xd0, 0xb2, 0xd0, 0xb8, 0xd1, 0x81, 0xd1, 0x83, 0x20, 0xd0,
	0xba, 0xd0, 0xbe, 0xd0, 0xbc, 0xd0, 0xb0, 0xd0, 0xbd, 0xd0, 0xb4, 0xd1, 0x8b, 0x20, 0x6d, 0x69,
	0x73, 0x69, 0x73, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2a, 0x58, 0x0a, 0x14, 0x42, 0x53, 0x44, 0x20,
	0x33, 0x2d, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x20, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x65, 0x63, 0x6f, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2f, 0x62, 0x6c, 0x6f, 0x62, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x4c, 0x49, 0x43, 0x45, 0x4e,
	0x53, 0x45, 0x5a, 0x26, 0x0a, 0x24, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x08, 0x02, 0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x5a, 0x0f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_stock_proto_rawDescOnce sync.Once
	file_api_stock_proto_rawDescData = file_api_stock_proto_rawDesc
)

func file_api_stock_proto_rawDescGZIP() []byte {
	file_api_stock_proto_rawDescOnce.Do(func() {
		file_api_stock_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_stock_proto_rawDescData)
	})
	return file_api_stock_proto_rawDescData
}

var file_api_stock_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_api_stock_proto_goTypes = []interface{}{
	(*ListProductsResp)(nil), // 0: api.ListProductsResp
	(*Product)(nil),          // 1: api.Product
	(*emptypb.Empty)(nil),    // 2: google.protobuf.Empty
}
var file_api_stock_proto_depIdxs = []int32{
	1, // 0: api.ListProductsResp.products:type_name -> api.Product
	2, // 1: api.Stock.ListProducts:input_type -> google.protobuf.Empty
	0, // 2: api.Stock.ListProducts:output_type -> api.ListProductsResp
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_stock_proto_init() }
func file_api_stock_proto_init() {
	if File_api_stock_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_stock_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProductsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_stock_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_stock_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_stock_proto_goTypes,
		DependencyIndexes: file_api_stock_proto_depIdxs,
		MessageInfos:      file_api_stock_proto_msgTypes,
	}.Build()
	File_api_stock_proto = out.File
	file_api_stock_proto_rawDesc = nil
	file_api_stock_proto_goTypes = nil
	file_api_stock_proto_depIdxs = nil
}
